#summary Tutorial to Addendum annotations features by example
#labels Featured

== Creating your first annotation ==
Annotations in Addendum are simple objects. To make a new `Persistent` annotation all you
need to do is:
{{{
class Persistent extends Annotation {}
}}}


== Annotating a class ==
With this defined annotation, you can annotate a different class/method/property with it.
Annotating in Addendum is done by creating a doc block comment with annotation syntax you
might know from Java.
{{{
/** @Persistent */
class Person {
   // some code
}
}}}

== Accessing annotations ==
Annotations of a class are accessed through extended reflection API. A
reflecting class can be created in two ways:
{{{
$reflection = new ReflectionAnnotatedClass('Person'); // by class name

$person = new Person();
$reflection = new ReflectionAnnotatedClass($person); // by instance
}}}

To find out if a class is annotated by `Persistent` annotation use:
{{{
$reflection->hasAnnotation('Persistent'); // true
}}}

To access method/property annotations you can use `ReflectionAnnotatedMethod` and
`ReflectionAnnotatedProperty`.

= Valued annotations =

== Single valued annotation ==
An annotation can also hold a value. Let us create a `Table` annotation to demonstrate this
feature.

{{{
class Table extends Annotation {}
}}}

Now let us annotate a class with a valued annotation.

{{{
/** @Table("people") */
class Person {
   // some code
}
}}}

This value can be then accessed through reflection API

{{{
$reflection = new ReflectionAnnotatedClass('Person'); // by class name
$reflection->getAnnnotation('Table')->value; // contains string "people"
}}}

== Multi valued annotation ==

Annotations can also hold multiple values. A multi valued annotation can be defined easily
like this

{{{
class Secured extends Annotation {
   public $role;
   public $level;
}
}}}

Multi valued annotations are used like this:

{{{
/** @Secured(role = "admin", level = 2);
class ArticleEditor {
 // some code
}
}}}

To access these field just use extended reflection API.

{{{
$reflection = new ReflectionAnnotatedClass('Person'); // by class name
$annotation = $reflection->getAnnnotation('Secured');
$annotation->role; // contains string "admin"
$annotation->level; // contains integer "2"
}}}
